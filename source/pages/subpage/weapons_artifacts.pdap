

HudMessageParallax(
    StrParam("\cf%l:\c-\n", 
    "PDA_DEMONARTIFACTS_NOTSUPPORTED"),
    HUDMSG_PLAIN, PDA_INFOID, CR_UNTRANSLATED, 10.0, 20.0 + (20.0 * 1), 0.0, 1.0);

if (!weapon_checks[0]) {
    HudMessageParallax(
        StrParam(
            "%l:\n[\c[LightBlue]%i:B \c[Red]%i:P \c[Green]%i:A \c[Yellow]%i:T \c[Purple]%i:S \c[Orange]%i:F \c[White]%i:N \cr%i:D\c-]"
            "\n\n",
            (weapon_checks[0]) ? 
            (CheckInventory(StrParam("%s:DemonArtifacts", player_weapon[0])) ? 
                weapon_info[1] 
                : weapon_info[0]) 
            : weapon_info[0],
            Weapon_Mod_Quantity[0], Weapon_Mod_Quantity[1], Weapon_Mod_Quantity[2], Weapon_Mod_Quantity[3],
            Weapon_Mod_Quantity[4], Weapon_Mod_Quantity[5], Weapon_Mod_Quantity[6],
            (weapon_checks[0]) ? 0 : Weapon_Mod_Quantity[7]
        ),
            HUDMSG_PLAIN, PDA_INFOID, CR_UNTRANSLATED, 
            10.0, 20.0 + (20.0 * 1), 0.0, 1.0);
        
    float artifactsY = 60.0;

    if (Weapon_Mod_Quantity[7] > 0) {
        switch (Weapon_Mod_Quantity[7]) {
            case 1:
                HudMessageParallax(
                    StrParam(
                        "\cf%l:\c-\n"
                        "%l:\n\n",
                        "PDA_DEMONARTIFACTS_ONE",
                        StrParam("PDA_ARTIFACT_%s:_ONE", player_weapon[1])
                    ),
                    HUDMSG_PLAIN, PDA_INFO2ID, CR_UNTRANSLATED, 10.0, 10.0 + (artifactsY * 1), 0.0, 1.0);
                break;
            case 2:
                HudMessageParallax(
                    StrParam(
                        "\cf%l:\c-\n"
                        "%l:\n\n"
                        "\c[Red]%l:\c-\n"
                        "%l:\n\n",
                        "PDA_DEMONARTIFACTS_TWO",
                        StrParam("PDA_ARTIFACT_%s:_TWO", player_weapon[1]),
                        "PDA_DEMONARTIFACTS_ONE",
                        StrParam("PDA_ARTIFACT_%s:_ONE", player_weapon[1])
                    ),
                    HUDMSG_PLAIN, PDA_INFO2ID, CR_UNTRANSLATED, 10.0, 10.0 + (artifactsY * 1), 0.0, 1.0);
                break;
            case 3:
                HudMessageParallax(
                    StrParam(
                        "\cf%l:\c-\n"
                        "%l:\n\n"
                        "\c[Red]%l:\c-\n"
                        "%l:\n\n"
                        "\c[Red]%l:\c-\n"
                        "%l:\n\n",
                        "PDA_DEMONARTIFACTS_THREE",
                        StrParam("PDA_ARTIFACT_%s:_THREE", player_weapon[1]),
                        "PDA_DEMONARTIFACTS_TWO",
                        StrParam("PDA_ARTIFACT_%s:_TWO", player_weapon[1]),
                        "PDA_DEMONARTIFACTS_ONE",
                        StrParam("PDA_ARTIFACT_%s:_ONE", player_weapon[1])
                    ),
                    HUDMSG_PLAIN, PDA_INFO2ID, CR_UNTRANSLATED, 10.0, 10.0 + (artifactsY * 1), 0.0, 1.0);
                break;
        }
    }
    else {
        HudMessageParallax(
            StrParam(
                "\c[Red]%l:\c-\n",
                "PDA_DEMONARTIFACTS_ZERO"
            ),
            HUDMSG_PLAIN, PDA_INFO2ID, CR_UNTRANSLATED, 10.0, 10.0 + (artifactsY * 1), 0.0, 1.0);
    }
}
// for (int weaponIndex = 0; weaponIndex < DRLA_DEMONWEAPONMAX; weaponIndex++) {
//     if (StrCmp(player_weapon[0], DRLA_ArtifactEffectList[weaponIndex][0]) == 0) {
    // }
// }