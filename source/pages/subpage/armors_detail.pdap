// Armor / Boots / Suit display
fixed y          = 0.0;
fixed initialY   = 30.0;
const int height = 16;
int width        = 60;

bool PDA_ManyHax    = false;
// int pdaStrTrimValue = 0;

const float inAlpha = 0.7;
const fixed playerIconX = PDA_SCREEN_X + 20.0 + X_LEFT_EDGE;

DisplayIconParallax("PDAPLYR", PDA_PLYR_ICON, playerIconX, 40.0, INF_HOLDTIME, OPAQUE);

localShowArmor    = (localEqBoolField & 1);
localShowBoots    = (localEqBoolField & 1<<1);
localShowBackpack = (localEqBoolField & 1<<2);

if (localHasArmor) {
    DisplayIconParallax("PDAPARM", PDA_PLAYER_BODY_ICON, playerIconX, 40.0, 0.0, show_equipment[equipment_armor][PlayerNumber()] ? 1.0 : 0.5);

    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_ARMOR_ICON] = PDA_DisplayArmor(PDA_PLAYER_ARMOR_ICON, ARMOR_DATA,
                        playerIconX + 35.0, 20.0, height, localShowArmor ? pulser(2.0, 0.8) : inAlpha);
    }

    PDA_ButtonHandler(PDA_PLAYER_ARMOR_ICON, true, 2, "", false, false);
    PDA_LocalButton[PDA_PLAYER_ARMOR_ICON].alpha = localShowArmor ? pulser(2.0, 0.8) : inAlpha;
    if (PDA_LocalButton[PDA_PLAYER_ARMOR_ICON].state == button_clicked) {
        if (localEqBoolField != 1) localEqBoolField = 1;
    }
}

if (localHasBackpack) {
    DisplayIconParallax("PDAPBCK", PDA_PLYR_ICON - 2, playerIconX, 40.0, 0.0, show_equipment[equipment_backpack][PlayerNumber()] ? 1.0 : 0.5);

    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_BACKPACK_ICON] = PDA_DisplayArmor(PDA_PLAYER_BACKPACK_ICON, BACKPACK_DATA, 
                        playerIconX + 33.0, 45.0, height, localShowBackpack ? pulser(2.0, 0.8) : inAlpha);
    }

    PDA_ButtonHandler(PDA_PLAYER_BACKPACK_ICON, true, 2, "", false, false);
    PDA_LocalButton[PDA_PLAYER_BACKPACK_ICON].alpha = localShowBackpack ? pulser(2.0, 0.8) : inAlpha;
    if (PDA_LocalButton[PDA_PLAYER_BACKPACK_ICON].state == button_clicked) {
        if (localEqBoolField != 4) localEqBoolField = 4;
    }

}

if (localHasBoots) {
    DisplayIconParallax("PDAPBTS", PDA_PLYR_ICON - 3, playerIconX, 40.0, 0.0, show_equipment[equipment_boots][PlayerNumber()] ? 1.0 : 0.5);

    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_BOOTS_ICON] = PDA_DisplayArmor(PDA_PLAYER_BOOTS_ICON, BOOTS_DATA, 
                        playerIconX + 30.0, 70.0, height, localShowBoots ? pulser(2.0, 0.8) : inAlpha);
    }

    PDA_ButtonHandler(PDA_PLAYER_BOOTS_ICON, true, 2, "", false, false);
    PDA_LocalButton[PDA_PLAYER_BOOTS_ICON].alpha = localShowBoots ? pulser(2.0, 0.8) : inAlpha;
    if (PDA_LocalButton[PDA_PLAYER_BOOTS_ICON].state == button_clicked) {
        if (localEqBoolField != 2) localEqBoolField = 2;
    }
}

//armorDesc =  StrParam("PDA_ARMOR_%s:_DESC", StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,pdaStrTrimValue));

str equipment_set_name        = "N/A\n",
    equipment_set_description = "\n\n";

// Armor
for (int setIndex = 0; setIndex < DRLA_ARMORSETMAX; setIndex++) {
    if (CheckInventory(DRLA_ArmorSetList[setIndex])) {
        if (CheckInventory("RLEnclaveSetBonusActive") && CheckInventory("RLNuclearWeaponSetBonusActive"))
            PDA_ManyHax = true;

        str trimmedList = strTrim(DRLA_ArmorSetList[setIndex],2,0);

        equipment_set_name = StrParam("%l:\n\n", (PDA_ManyHax)
            ? "PDA_ARMOR_NuclearWeaponSetBonusActive_equipment_set_name"
            : StrParam("PDA_ARMOR_%s:_equipment_set_name", trimmedList));
        equipment_set_description = StrParam("%l:\n\n", (PDA_ManyHax)
            ? "PDA_ARMOR_NuclearWeaponSetBonusActive_equipment_set_description"
            : StrParam("PDA_ARMOR_%s:_equipment_set_description", trimmedList));
    }
}

str enclaveequipment_set_name = (PDA_ManyHax) ? StrParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_equipment_set_name") : "";
str enclaveequipment_set_description = (PDA_ManyHax) ? StrParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_equipment_set_description") : "";

SetFont(PDA_FONT[mono_font]);

if (localShowArmor && localHasArmor) {
    HudMessageParallax(
        StrParam(
            "%s:" // Armor section
            "%s:""%l:" // Protection header / value
            "%s:""%l:" // Resistances header / value
            "%s:""%l:" // Attributes header / value
            "%s:"" %l:" // Description header / value
            "%s:" // Set bonus header
            " %l:"" %l:" // Bitch hacks for Enclave/Nuclear set
            " %l:"" %l:" // Set name / desc
            ,
            "\cgARMOR\c-\n",
            "\crProtection:\c-\n",
            localArmorData.armorVal,

            "\crResistances:\c-\n",
            StrParam("%l:\n", localArmorData.armorRes),

            "\crAttributes:\c-\n",
            StrParam("%l:\n\n", localArmorData.armorAttr),

            "\crDescription:\c-\n",
            StrParam(" %l:\n\n", localArmorData.armorDesc),

            "\crSet bonus:\c-\n",
            enclaveequipment_set_name,
            enclaveequipment_set_description,
            equipment_set_name,
            equipment_set_description
        ),
        HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, 10.0, 140.0, INF_HOLDTIME, OPAQUE);
} else if (localShowBoots && localHasBoots) {
    HudMessageParallax(
        StrParam(
            "%s:" // Boots section
            "%s:""%l:" // Boots protection header / value
            "%s:""%l:" // Boots attributes header / value
            "%s:""%l:" // Boots description header / value
            ,
            "\cgBOOTS\c-\n",
            "\crProtection:\c-\n",
            localBootsData.bootsVal,
            "\crAttributes:\c-\n",
            StrParam("%l:\n", localBootsData.bootsAttr),
            "\crDescription:\c-\n",
            StrParam("%l:\n", localBootsData.bootsDesc)
        ),
        HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, 10.0, 140.0, INF_HOLDTIME, OPAQUE);
} else if (localShowBackpack && localHasBackpack) {
    HudMessageParallax(
        StrParam(
            "%s:" // Backpack
            "%s:" // Backpack description header
            "%l:" // Backpack value
            ,

            "\cgBACKPACK\c-\n",
            "\crDescription:\c-\n",
            localBackpackData.backpackVal
        ),
        HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, 10.0, 140.0, INF_HOLDTIME, OPAQUE);
}