


// Armor / Boots / Suit display
fixed y          = 0.0;
fixed initialY   = 30.0;
const int height = 16;
int width        = 60;

bool PDA_ManyHax    = false;
// int pdaStrTrimValue = 0;

const float inAlpha = 0.7;
const fixed playerIconX = PDA_SCREEN_X + 20.0 + X_LEFT_EDGE;

DisplayIconParallax("PDAPLYR", PDA_PLYR_ICON, playerIconX, 40.0, 0.0, 1.0);

localArmorData    = setupArmorData(specialArmorTokens);
localBootsData    = setupBootsData();
localBackpackData = setupBackpackData();

// No point to this in the detail info, I guess
localArmorData.tooltip    = "";
localBootsData.tooltip    = "";
localBackpackData.tooltip = "";


localShowArmor    = (localABoolField & 1);
localShowBoots    = (localABoolField & 1<<1);
localShowBackpack = (localABoolField & 1<<2);

if (localHasArmor) {
    const fixed equippedArmorX = playerIconX + 35.0;
    // Not the renegade of funk, unfortunately..
    bool isRenegade = false;
         isRenegade = (CheckActorClass(0, CheckInventory("DRPGDRLAActive") ? "DoomRLRenegadeRPG" : "DoomRLRenegade") == true);

    // if(CheckInventory("DRPGDRLAActive")) {
    //     isRenegade = (CheckActorClass(0,"DoomRLRenegadeRPG") == true);
    // } else {
    //     isRenegade = (CheckActorClass(0,"DoomRLRenegade") == true);
    // }

    DisplayIconParallax("PDAPARM", PDA_PLAYER_BODY_ICON, playerIconX, 40.0, 0.0, showArmor ? 1.0 : 0.5);

    width       = strLen(localArmorData.name) * 5;
    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_ARMOR_ICON] = PDA_DisplayArmor(PDA_PLAYER_ARMOR_ICON, localArmorData.name, localArmorData.graphic, 
                    equippedArmorX, 20.0, 
                    width, height, 
                    localArmorData.tooltip, localShowArmor ? pulser(2.0, 0.8) : inAlpha);
    }
    PDA_ButtonHandler(PDA_PLAYER_ARMOR_ICON, true, 2, "", true);
    if(PDA_LocalButton[PDA_PLAYER_ARMOR_ICON].state == button_clicked) {
        if (localABoolField != 1) localABoolField = 1;
    }
}

if (localHasBackpack) {
    const fixed equippedBackX  = playerIconX + 33.0;
    DisplayIconParallax("PDAPBCK", PDA_PLYR_ICON - 2, playerIconX, 40.0, 0.0, showBackpack ? 1.0 : 0.5);

    width          = strLen(localBackpackData.name) * 5;
    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_BACKPACK_ICON] = PDA_DisplayArmor(PDA_PLAYER_BACKPACK_ICON, localBackpackData.name, localBackpackData.graphic, 
                        equippedBackX, 45.0, 
                        width, height, 
                        localBackpackData.tooltip, localShowBackpack ? pulser(2.0, 0.8) : inAlpha);
    }
    PDA_ButtonHandler(PDA_PLAYER_BACKPACK_ICON, true, 2, "", true);
    if(PDA_LocalButton[PDA_PLAYER_BACKPACK_ICON].state == button_clicked) {
        if (localABoolField != 4) localABoolField = 4;
    }

}

if (localHasBoots) {
    const fixed equippedBootsX = playerIconX + 30.0;
    DisplayIconParallax("PDAPBTS", PDA_PLYR_ICON - 3, playerIconX, 40.0, 0.0, showBoots ? 1.0 : 0.5);

    width       = strLen(localBootsData.name) * 5;
    
    if (PDA_LocalMouse.scrolling) {
        PDA_LocalButton[PDA_PLAYER_BOOTS_ICON] = PDA_DisplayArmor(PDA_PLAYER_BOOTS_ICON, localBootsData.name, localBootsData.graphic, 
                    equippedBootsX, 70.0, 
                    width, height, 
                    localBootsData.tooltip, localShowBoots ? pulser(2.0, 0.8) : inAlpha);
    }
    PDA_ButtonHandler(PDA_PLAYER_BOOTS_ICON, true, 2, "", true);
    
    if(PDA_LocalButton[PDA_PLAYER_BOOTS_ICON].state == button_clicked) {
        if (localABoolField != 2) localABoolField = 2;
    }
}

// if (isRenegade && (StrCmp(StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,0),StrParam(s:StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,10),s:"Renegade"))) == 0)
//     pdaStrTrimValue = 10;
// else
//     pdaStrTrimValue = 0;

//armorDesc =  StrParam("PDA_ARMOR_%s:_DESC", StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,pdaStrTrimValue));

str equipment_set_name        = "N/A\n",
    equipment_set_description = "\n\n";

// Armor
for (int setIndex = 0; setIndex < DRLA_ARMORSETMAX; setIndex++) {
    if(CheckInventory(DRLA_ArmorSetList[setIndex])) {
        if(CheckInventory("RLEnclaveSetBonusActive") && CheckInventory("RLNuclearWeaponSetBonusActive"))
            PDA_ManyHax = true;

        str trimmedList = strTrim(DRLA_ArmorSetList[setIndex],2,0);

        equipment_set_name = strParam("%l:\n\n", (PDA_ManyHax)
            ? "PDA_ARMOR_NuclearWeaponSetBonusActive_equipment_set_name"
            : strParam("PDA_ARMOR_%s:_equipment_set_name", trimmedList));
        equipment_set_description = strParam("%l:\n\n", (PDA_ManyHax)
            ? "PDA_ARMOR_NuclearWeaponSetBonusActive_equipment_set_description"
            : strParam("PDA_ARMOR_%s:_equipment_set_description", trimmedList));
    }
}

str enclaveequipment_set_name = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_equipment_set_name") : "";
str enclaveequipment_set_description = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_equipment_set_description") : "";

SetFont(USED_PDA_FONT);

if (localShowArmor && localHasArmor) {
    HudMessage(
                "%s:" // Armor section
                "%s:" // Protection header
                "%l:" // Protection value
                "%s:" // Resistances header
                "%l:" // Resistances value
                "%s:" // Attributes header
                "%l:" // Attributes value
                "%s:" // Description header
                " %l:" // Description value
                "%s:" // Set bonus header
                " %l:" // Bitch hacks for Enclave/Nuclear set
                " %l:" // Bitch hacks for Enclave/Nuclear set
                " %l:" // Set name
                " %l:" // Set desc
                ,
                "\cgARMOR\c-\n",
                "\crProtection:\c-\n",
                localArmorData.armorVal,

                "\crResistances:\c-\n",
                strParam("%l:\n", localArmorData.armorRes),

                "\crAttributes:\c-\n",
                strParam("%l:\n\n", localArmorData.armorAttr),

                "\crDescription:\c-\n",
                strParam(" %l:\n\n", localArmorData.armorDesc),

                "\crSet bonus:\c-\n",
                enclaveequipment_set_name,
                enclaveequipment_set_description,
                equipment_set_name,
                equipment_set_description;
                HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingY * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
} else if (localShowBoots && localHasBoots) {
    HudMessage(
                "%s:" // Boots section
                "%s:" // Boots protection header
                "%l:" // Boots protection value
                "%s:" // Boots attributes header
                "%l:" // Boots attributes value
                "%s:" // Boots description header
                "%l:" // Boots description value
                ,
                "\cgBOOTS\c-\n",
                "\crProtection:\c-\n",
                localBootsData.bootsVal,
                "\crAttributes:\c-\n",
                strParam("%l:\n", localBootsData.bootsAttr),
                "\crDescription:\c-\n",
                strParam("%l:\n", localBootsData.bootsDesc);
                HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingY * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
} else if (localShowBackpack && localHasBackpack) {
    HudMessage(
                "%s:" // Backpack
                "%s:" // Backpack description header
                "%l:" // Backpack value
                ,

                "\cgBACKPACK\c-\n",
                "\crDescription:\c-\n",
                localBackpackData.backpackVal;
                HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingY * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
}