PDA_Local.pagemax = 2;

PDA_Wipe();

#define PDA_ArmorXOffset 40.0 + X_LEFT_EDGE

switch (PDA_Local.page) {
    case 1: PDA_PrintHeader("PDA_ARMOR_HEADER1", -20); break;
    case 2: PDA_PrintHeader("PDA_ARMOR_HEADER2", -15); break;
}

PDAButton P1 = PDA_CreateTab(50, "1", "PTAB", X_LEFT_EDGE + (12.0 * 0), PDA_SCREEN_Y + 1.0 + Y_TOP_EDGE, 12, 12);
PDAButton P2 = PDA_CreateTab(51, "2", "PTAB", X_LEFT_EDGE + (12.0 * 1), PDA_SCREEN_Y + 1.0 + Y_TOP_EDGE, 12, 12);

PDA_InitButton(P1, true, 1, "", false);
PDA_InitButton(P2, true, 2, "", false);

bool isRenegade = false;

if(CheckInventory("DRPGDRLAActive")) {
    isRenegade = (CheckActorClass(0,"DoomRLRenegadeRPG") == true);
} else {
    isRenegade = (CheckActorClass(0,"DoomRLRenegade") == true);
}

// Armors & Boots in inventory
// Show that this is scrollable

//SetHudSize(NEW_RESOLUTION_WIDTH,NEW_RESOLUTION_HEIGHT);
PDA_SetupBounds();
SetFont(PDA_FONT_LOWER);

#define EQUIPMENT_PAGE_ONHAND 1
#define EQUIPMENT_PAGE_INFO 2

if (PDA_Local.page == EQUIPMENT_PAGE_ONHAND) {
    if (localHasBackpack) {
        PDA_SetScrollLimit(-140);
        PDA_SetScrollArrows2(-140, PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);
    } else {
        PDA_SetScrollLimit(-80);
        PDA_SetScrollArrows2(-80, PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);
    }

    int id = 0;
    str langEntry = "N/A\n";
    str name = "\n";
    str graphic = "\n";
    str attr = "N/A\n";
    str res = "N/A\n";

    const fixed x    = PDA_SCREEN_X + 20.0 + X_LEFT_EDGE;
    int width        = 0;
    fixed y          = 0.0;
    const int height = 16;
    fixed initialY   = 30.0 + Y_TOP_EDGE;
    str tooltip      = "\n";

    // Funny that I opted to do this instead of just declaring the message outright..
    HudMessage("%s:", "No equipment detected"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, x, PDA_SCREEN_Y + PDA_Local.texty + 50.0 + Y_TOP_EDGE, 0);

    int armorLimit       = 0;
    str armorPickupCheck = "\n";
    str armorWornCheck   = "\n";
    bool boots           = false;

    bool specialArmorTokens = CheckInventory("RLEnclaveSetBonusActive") || CheckInventory("PowerRLPrototypeAssaultShieldProtection") || CheckInventory("PowerRLOverchargeSystemProtection") || CheckInventory("RLCyberneticArmorModdedToken") || CheckInventory("RLDeathFromAboveSetBonusActive") || CheckInventory("PowerRLInquisitorsSetBonusProtection");

    if (localHasArmor) {
        tooltip = "";
        HudMessage(s:"\n"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, 0, 0, 0);

        if (specialArmorTokens) {
            if (CheckInventory("RLEnclaveSetBonusActive")) {
                langEntry = strParam("PDA_ARMOR_%s:COMPLETE", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            } else {
                langEntry = strParam("PDA_ARMOR_BOOSTED_%s:", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            }
            res = strParam("%l:_RES", langEntry);
        } else {
            langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            res = strParam("%l:_RES", langEntry);

            if(CheckInventory("PowerRLReactiveShieldSystemMelee"))
                res = "PDA_ARMOR_REACTIVESHIELDSYSTEM_MELEE";

            if(CheckInventory("PowerRLReactiveShieldSystemBullet"))
                res = "PDA_ARMOR_REACTIVESHIELDSYSTEM_BULLET";

            if(CheckInventory("PowerRLReactiveShieldSystemFire"))
                res = "PDA_ARMOR_REACTIVESHIELDSYSTEM_FIRE";

            if(CheckInventory("PowerRLReactiveShieldSystemPlasma"))
                res = "PDA_ARMOR_REACTIVESHIELDSYSTEM_PLASMA";
        }
        if (specialArmorTokens && stricmp(strLeft(DRLA_ArmorList[localArmorIndex][armor_TOKEN], 17), "RLCyberneticArmor") == 0) {
            name    = "PDA_ARMOR_CYBERNETICARMOR_NAME";
            graphic = "PDA_ARMOR_CYBERNETICARMOR_ICON";
            attr    = "PDA_ARMOR_CYBERNETICARMOR_ATTR";
            tooltip = strParam("%l:\n%l:\n%l:",
                    (!isRenegade) ? "PDA_ARMOR_CYBERNETICARMOR_PROT" : "PDA_ARMOR_CYBERNETICARMOR_RENPROT", res, attr);
        } else {
            name    = strParam("%l:_NAME", langEntry);
            graphic = strParam("%l:_ICON", langEntry);
            attr    = strParam("%l:_ATTR",  langEntry);
            tooltip = strParam("%l:\n%l:\n%l:",
                        (!isRenegade) ? strParam("%l:_PROT", langEntry) : strParam("%l:_RENPROT", langEntry),
                        res, attr);
        }

        width = (strLen(name) * 5);
        id    = (PDA_WORNARMORS - 4) + (armorLimit * 4);
        y     = initialY + (height * (armorLimit*2));

        PDAButton armor = PDA_DisplayArmor(id, strParam("\cdE:\c- %l:", name), graphic, x, y, width, height, tooltip, 1.0);
        PDA_InitButton(armor, true, 1, "", true);

        if (armorLimit > PDA_MAX_ARMOR_IN_INV+1) armorLimit = 0;
        else armorLimit++;
    }

    if (localHasBoots) {
        tooltip = "";
        HudMessage(s:"\n"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, 0, 0, 0);

        if(CheckInventory("RLEnclaveSetBonusActive")) {
            langEntry = strParam("PDA_ARMOR_BOOSTED_%s:", DRLA_ArmorList[localBootsIndex][armor_ACTOR]);
        } else  {
            langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[localBootsIndex][armor_ACTOR]);
        }
        name    = strParam("%l:_NAME", langEntry);
        graphic = strParam("%l:_ICON", langEntry);
        attr    = strParam("%l:_ATTR", langEntry);
        tooltip = strParam("%l:\n\n%l:", strParam("%l:_PROT", langEntry), attr);

        width = (strLen(name) * 5);
        id    = (PDA_WORNARMORS - 4) + (armorLimit * 4);
        y     = initialY + (height * (armorLimit*2));

        PDAButton boots = PDA_DisplayArmor(id, strParam("\cdE:\c- %l:", name), graphic, x, y, width, height, tooltip, 1.0);
        PDA_InitButton(boots, true, 1, "", true);

        if (armorLimit > PDA_MAX_ARMOR_IN_INV+1) armorLimit = 0;
        else armorLimit++;
    }
    // Stashed armors
    for (int armorIndex = 0; armorIndex < DRLA_ARMORMAX; armorIndex++) {
        armorPickupCheck = strParam("%s:Pickup", DRLA_ArmorList[armorIndex][armor_TOKEN]);
        boots = strCmp(DRLA_ArmorList[armorIndex][armor_TOKEN],strParam("%s:Boots", StrTrim(DRLA_ArmorList[armorIndex][armor_TOKEN],0,5))) == 0;

        if (CheckInventory(armorPickupCheck)) {
            HudMessage(s:"\n"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, 0, 0, 0);

            id = (PDA_STASHEDARMORS - 8) + (armorLimit * 2);
            y  = initialY + (height * (armorLimit*2));

            langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[armorIndex][armor_ACTOR]);
            name      = strParam("%l:_NAME", langEntry);
            graphic   = strParam("%l:_ICON", langEntry);
            attr      = strParam("%l:_ATTR", langEntry);
            width     = strLen(name) * 5;

            if (!boots) {
                tooltip = strParam("%l:\n%l:\n%l:",
                        (!isRenegade) ? strParam("%l:_PROT", langEntry) : strParam("%l:_RENPROT", langEntry),
                        strParam("%l:_RES", langEntry), attr);
            } else {
                tooltip = strParam("%l:\n\n%l:",
                        strParam("%l:_PROT", langEntry), attr);
            }
            /*tooltip   = strParam("%l:\n%l:\n%l:\n",
                        (!boots) ? ((!isRenegade) ? strParam("%l:_PROT", langEntry) : strParam("%l:_RENPROT", langEntry)) : "",
                        (!boots) ? strParam("%l:_RES", langEntry) : strParam("%l:_PROT", langEntry), attr);*/

            PDAButton stashed = PDA_DisplayArmor(id, name, graphic, x, y, width, height, tooltip, 1.0);
            PDA_InitButton(stashed, true, 1, "", true);

            if (armorLimit > PDA_MAX_ARMOR_IN_INV+1) armorLimit = 0;
            else armorLimit++;
        }
    }
    PDA_DefaultFont();
}

// Armor name + backstory
if(PDA_Local.page == EQUIPMENT_PAGE_INFO) {
    PDA_SetScrollLimit(-160);
    PDA_SetScrollArrows2(-160, PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);

    const fixed playerIconX = PDA_SCREEN_X + 20.0 + X_LEFT_EDGE;
    fixed playerIconY = 40.0 + Y_TOP_EDGE;

    str armorNamePrinter = "\n";
    str bootsNamePrinter = "\n";

    bool specialArmorTokens = CheckInventory("RLEnclaveSetBonusActive") || CheckInventory("PowerRLPrototypeAssaultShieldProtection") || CheckInventory("PowerRLOverchargeSystemProtection") || CheckInventory("RLCyberneticArmorModdedToken");

    // time for crime
    const fixed equippedArmorX = playerIconX + 55.0 + X_LEFT_EDGE;
    const fixed equippedBackX  = playerIconX + 53.0 + X_LEFT_EDGE;
    const fixed equippedBootsX = playerIconX + 50.0;

    // Armor / Boots / Suit display
    str langEntry    = "N/A\n";
    str name         = "N/A\n";
    str graphic      = "\n";
    fixed y          = 0.0;
    fixed initialY   = (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 30.0 + Y_TOP_EDGE;
    const int height = 16;
    int width        = 60;
    str tooltip      = "\n";

    // Armor
    str armorVal  = "N/A\n",
        armorRes  = "N/A\n",
        armorAttr = "N/A\n",
        armorDesc = "N/A\n";

    // Boots
    str bootsVal  = "N/A\n",
        bootsAttr = "N/A\n",
        bootsDesc = "N/A\n";

    // Set
    str enclaveSetName = "\n",
        enclaveSetDesc = "\n";
    str setName        = "N/A\n",
        setDesc        = "\n\n";

    // Backpack
    str backpackVal = "N/A\n";

    bool PDA_ManyHax    = false;
    int pdaStrTrimValue = 0;
    PDAButton armorButton, bootsButton, backpackButton;

    const float inAlpha = 0.4;

    DisplayIcon("PDAPLYR", PDA_PLYR_ICON, playerIconX, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 40.0 + Y_TOP_EDGE, 0.0, 1.0);

    if (localHasArmor) {
        DisplayIcon("PDAPARM", PDA_PLYR_ICON - 1, playerIconX, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 40.0 + Y_TOP_EDGE, 0.0, showArmor ? 1.0 : 0.5);
        tooltip = "";

        if (specialArmorTokens) {
            if (CheckInventory("RLEnclaveSetBonusActive")) {
                langEntry = strParam("PDA_ARMOR_%s:COMPLETE", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            } else {
                langEntry = strParam("PDA_ARMOR_BOOSTED_%s:", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            }
            armorRes  = strParam("%l:_RES", langEntry);
        } else {
            langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[localArmorIndex][armor_ACTOR]);
            armorRes  = strParam("%l:_RES", langEntry);

            if (CheckInventory("PowerRLReactiveShieldSystemMelee"))
                armorRes = "PDA_ARMOR_REACTIVESHIELDSYSTEM_MELEE";

            if (CheckInventory("PowerRLReactiveShieldSystemBullet"))
                armorRes = "PDA_ARMOR_REACTIVESHIELDSYSTEM_BULLET";

            if (CheckInventory("PowerRLReactiveShieldSystemFire"))
                armorRes = "PDA_ARMOR_REACTIVESHIELDSYSTEM_FIRE";

            if (CheckInventory("PowerRLReactiveShieldSystemPlasma"))
                armorRes = "PDA_ARMOR_REACTIVESHIELDSYSTEM_PLASMA";
        }

        if (specialArmorTokens && stricmp(strLeft(DRLA_ArmorList[localArmorIndex][armor_TOKEN], 17), "RLCyberneticArmor") == 0) {
            name      = "PDA_ARMOR_CYBERNETICARMOR_NAME";
            graphic   = "PDA_ARMOR_CYBERNETICARMOR_ICON";
            armorAttr = "PDA_ARMOR_CYBERNETICARMOR_ATTR";
            armorDesc = "PDA_ARMOR_CYBERNETICARMOR_DESC";
            if (CheckInventory("RLCyberneticArmorModdedToken")) {
                if (CheckInventory("RLCyberneticArmorBulkToken"))      armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORBULK_RES";
                if (CheckInventory("RLCyberneticArmorPowerToken"))     armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORPOWER_RES";
                if (CheckInventory("RLCyberneticArmorAgilityToken"))   armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORAGILITY_RES";
                if (CheckInventory("RLCyberneticArmorTechnicalToken")) armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORTECHNICAL_RES";
                if (CheckInventory("RLCyberneticArmorSniperToken"))    armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORSNIPER_RES";
                if (CheckInventory("RLCyberneticArmorFirestormToken")) armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORFIRESTORM_RES";
                if (CheckInventory("RLCyberneticArmorNanoToken"))      armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORNANO_RES";
                if (CheckInventory("RLCyberneticArmorOnyxToken"))      armorRes = "PDA_ARMOR_BOOSTED_CYBERNETICARMORONYX_RES";
            }
            armorVal  = strParam("%l:\n\n",
                    (!isRenegade) ? "PDA_ARMOR_CYBERNETICARMOR_PROT" : "PDA_ARMOR_CYBERNETICARMOR_RENPROT");
        } else {
            name      = strParam("%l:_NAME", langEntry);
            graphic   = strParam("%l:_ICON", langEntry);
            armorAttr = strParam("%l:_ATTR", langEntry);
            armorDesc = strParam("%l:_DESC", langEntry);
            armorVal  = strParam("%l:\n\n",
                    (!isRenegade) ? strParam("%l:_PROT", langEntry) : strParam("%l:_RENPROT", langEntry));
        }

        width     = (strLen(name) * 5);

        armorButton = PDA_DisplayArmor(PDA_PLYR_ICON - 5, name, graphic, equippedArmorX, (int)(PDA_Local.scrollingy) + 20.0 + Y_TOP_EDGE, width, height, tooltip, localShowArmor ? 1.0 : inAlpha);
        PDA_InitButton(armorButton, true, 2, "", true);
    }

    if (localHasBackpack) {
        DisplayIcon("PDAPBCK", PDA_PLYR_ICON - 2, playerIconX, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 40.0 + Y_TOP_EDGE, 0.0, showBackpack ? 1.0 : 0.5);

        name    = strParam("%l:", strParam("PDA_BACKPACK_%s:_NAME", DRLA_BackpackList[localBackpackIndex][1]));
        graphic = strParam("%l:", strParam("PDA_BACKPACK_%s:_ICON", DRLA_BackpackList[localBackpackIndex][1]));
        tooltip = "";

        backpackVal = strParam("%l:", strParam("PDA_BACKPACK_%s:_DESC", DRLA_BackpackList[localBackpackIndex][1]));
        width       = (strLen(name) * 5);

        backpackButton = PDA_DisplayArmor(PDA_PLYR_ICON - 7, name, graphic, equippedBackX, (int)(PDA_Local.scrollingy) + 45.0 + Y_TOP_EDGE, width, height, tooltip, localShowBackpack ? 1.0 : inAlpha);
        PDA_InitButton(backpackButton, true, 2, "", true);
    }

    if (localHasBoots) {
        DisplayIcon("PDAPBTS", PDA_PLYR_ICON - 3, playerIconX, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 40.0 + Y_TOP_EDGE, 0.0, showBoots ? 1.0 : 0.5);

        langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[localBootsIndex][armor_ACTOR]);

        name    = strParam("%l:_NAME", langEntry);
        graphic = strParam("%l:_ICON", langEntry);

        if (CheckInventory("RLEnclaveSetBonusActive")) {
            bootsVal = strParam("%l:\n\n",  strParam("%l:_PROT", strParam("PDA_ARMOR_BOOSTED_%s:", DRLA_ArmorList[localBootsIndex][armor_ACTOR])));
        } else {
            bootsVal = strParam("%l:\n\n",  strParam("%l:_PROT", langEntry));
        }
        bootsAttr = strParam("%l:_ATTR", langEntry);
        bootsDesc = strParam("%l:_DESC", langEntry);

        width   = (strLen(name) * 5);
        tooltip = "";

        bootsButton = PDA_DisplayArmor(PDA_PLYR_ICON - 9, name, graphic, equippedBootsX, (int)(PDA_Local.scrollingy) + 70.0 + Y_TOP_EDGE, width, height, tooltip, localShowBoots ? 1.0 : inAlpha);
        PDA_InitButton(bootsButton, true, 2, "", true);
    }

    if (isRenegade && (StrCmp(StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,0),StrParam(s:StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,10),s:"Renegade"))) == 0)
        pdaStrTrimValue = 10;
    else
        pdaStrTrimValue = 0;

    //armorDesc =  StrParam("PDA_ARMOR_%s:_DESC", StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,pdaStrTrimValue));

    // Armor
    for (int setIndex = 0; setIndex < DRLA_ARMORSETMAX; setIndex++) {
        if(CheckInventory(DRLA_ArmorSetList[setIndex])) {
            if(CheckInventory("RLEnclaveSetBonusActive") && CheckInventory("RLNuclearWeaponSetBonusActive"))
                PDA_ManyHax = true;

            setName = strParam("%l:\n\n", (PDA_ManyHax) ? "PDA_ARMOR_NuclearWeaponSetBonusActive_SETNAME" : strParam("PDA_ARMOR_%s:_SETNAME", strTrim(DRLA_ArmorSetList[setIndex],2,0)));
            setDesc = strParam("%l:\n\n", (PDA_ManyHax) ? "PDA_ARMOR_NuclearWeaponSetBonusActive_SETDESC" : strParam("PDA_ARMOR_%s:_SETDESC", strTrim(DRLA_ArmorSetList[setIndex],2,0)));
        }
    }

    if(armorButton.state == button_clicked) {
        if (localABoolField != 1) localABoolField = 1;
    }

    if(bootsButton.state == button_clicked) {
        if (localABoolField != 2) localABoolField = 2;
    }

    if(backpackButton.state == button_clicked) {
        if (localABoolField != 4) localABoolField = 4;
    }

    localShowArmor    = (localABoolField & 1);
    localShowBoots    = (localABoolField & 1<<1);
    localShowBackpack = (localABoolField & 1<<2);

    enclaveSetName = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_SETNAME") : "";
    enclaveSetDesc = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_SETDESC") : "";

    SetFont(PDA_FONT_DEFAULT);

    if (localShowArmor && localHasArmor) {
        HudMessage(
                   "%s:" // Armor section
                   "%s:" // Protection header
                   "%l:" // Protection value
                   "%s:" // Resistances header
                   "%l:" // Resistances value
                   "%s:" // Attributes header
                   "%l:" // Attributes value
                   "%s:" // Description header
                   " %l:" // Description value
                   "%s:" // Set bonus header
                   " %l:" // Bitch hacks for Enclave/Nuclear set
                   " %l:" // Bitch hacks for Enclave/Nuclear set
                   " %l:" // Set name
                   " %l:" // Set desc
                   ,
                    "\cgARMOR\c-\n",
                    "\crProtection:\c-\n",
                    armorVal,

                    "\crResistances:\c-\n",
                    strParam("%l:\n", armorRes),

                    "\crAttributes:\c-\n",
                    strParam("%l:\n\n", armorAttr),

                    "\crDescription:\c-\n",
                    strParam(" %l:\n\n", armorDesc),

                    "\crSet bonus:\c-\n",
                    enclaveSetName,
                    enclaveSetDesc,
                    setName,
                    setDesc;
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    } else if (localShowBoots && localHasBoots) {
        HudMessage(
                   "%s:" // Boots section
                   "%s:" // Boots protection header
                   "%l:" // Boots protection value
                   "%s:" // Boots attributes header
                   "%l:" // Boots attributes value
                   "%s:" // Boots description header
                   "%l:" // Boots description value
                   ,
                    "\cgBOOTS\c-\n",
                    "\crProtection:\c-\n",
                    bootsVal,
                    "\crAttributes:\c-\n",
                    strParam("%l:\n", bootsAttr),
                    "\crDescription:\c-\n",
                    strParam("%l:\n", bootsDesc);
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    } else if (localShowBackpack && localHasBackpack) {
        HudMessage(
                   "%s:" // Backpack
                   "%s:" // Backpack description header
                   "%l:" // Backpack value
                   ,

                    "\cgBACKPACK\c-\n",
                    "\crDescription:\c-\n",
                    backpackVal;
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    }
}

PDA_DefaultFont();
PDA_UnsetScrollWindow();