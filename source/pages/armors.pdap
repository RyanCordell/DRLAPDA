PDA_Local.pagemax = 2;

PDA_Wipe();

#define PDA_ArmorXOffset 40.0 + X_LEFT_EDGE

switch (PDA_Local.page) {
    case 1: PDA_PrintHeader("PDA_ARMOR_HEADER1", -20); break;
    case 2: PDA_PrintHeader("PDA_ARMOR_HEADER2", -15); break;
}

PDAButton P1 = PDA_CreateTab(PDA_TAB_BUTTONS_START    , "1", "PTAB", PDA_TAB_START_X  , PDA_TAB_Y,  PDA_TAB_W, PDA_TAB_H);
PDAButton P2 = PDA_CreateTab(PDA_TAB_BUTTONS_START + 1, "2", "PTAB", PDA_TAB_NEXT_X(1), PDA_TAB_Y,  PDA_TAB_W, PDA_TAB_H);

PDA_InitButton(P1, true, 1, "", false);
PDA_InitButton(P2, true, 2, "", false);

bool isRenegade = false;

if(CheckInventory("DRPGDRLAActive")) {
    isRenegade = (CheckActorClass(0,"DoomRLRenegadeRPG") == true);
} else {
    isRenegade = (CheckActorClass(0,"DoomRLRenegade") == true);
}

// Armors & Boots in inventory
// Show that this is scrollable

//SetHudSize(NEW_RESOLUTION_WIDTH,NEW_RESOLUTION_HEIGHT);
PDA_SetupScreenBounds();
SetFont(PDA_FONT_LOWER);

#define EQUIPMENT_PAGE_ONHAND 1
#define EQUIPMENT_PAGE_INFO 2

str armorNamePrinter = "\n";
str bootsNamePrinter = "\n";

// Set
str enclaveSetName = "\n",
    enclaveSetDesc = "\n";
str setName        = "N/A\n",
    setDesc        = "\n\n";

str armorPickupCheck = "\n";
str armorWornCheck   = "\n";

const fixed playerIconX = PDA_SCREEN_X + 20.0 + X_LEFT_EDGE;
// time for crime
const fixed equippedArmorX = playerIconX + 35.0;
const fixed equippedBackX  = playerIconX + 33.0;
const fixed equippedBootsX = playerIconX + 30.0;

PDAButton armorButton, bootsButton, backpackButton;

#define bootsActor DRLA_ArmorList[localBootsIndex][armor_ACTOR]

if (PDA_Local.page == EQUIPMENT_PAGE_ONHAND) {
    if (localHasBackpack) {
        PDA_SetScrollLimit(-140);
        PDA_SetScrollArrows2(-140, PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);
    } else {
        PDA_SetScrollLimit(-80);
        PDA_SetScrollArrows2(-80 , PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);
    }

    int id = 0;

    const fixed x    = 10.0;
    int width        = 0;
    fixed y          = 0.0;
    const int height = 16;
    fixed initialY   = 30.0;

    // Funny that I opted to do this instead of just declaring the message outright..
    HudMessageParallax("No equipment detected", HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, x, 50.0, 0.0, 1.0);

    int armorLimit       = 0;
    bool boots           = false;

    bool specialArmorTokens = CheckInventory("RLEnclaveSetBonusActive")                 ||
                              CheckInventory("PowerRLPrototypeAssaultShieldProtection") ||
                              CheckInventory("PowerRLOverchargeSystemProtection")       ||
                              CheckInventory("RLCyberneticArmorModdedToken")            ||
                              CheckInventory("RLDeathFromAboveSetBonusActive")          ||
                              CheckInventory("PowerRLInquisitorsSetBonusProtection");
    
    localArmorData = setupArmorData(specialArmorTokens);
    localBootsData = setupBootsData();
    localBackpackData = setupBackpackData();

    if (localHasArmor || localHasBoots) {
        HudMessage(s:"\n"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, 0, 0, 0);
        id    = (PDA_WORNARMORS - 4) + (armorLimit * 4);
        y     = initialY + (height * (armorLimit * 2));

        if (armorLimit > PDA_MAX_ARMOR_IN_INV + 1) armorLimit = 0;
        else armorLimit++;
    }
    if (localHasArmor) {
        width = (strLen(localArmorData.name) * 5);

        PDAButton armor = PDA_DisplayArmor(id, strParam("\cdE:\c- %s:", localArmorData.name), localArmorData.graphic, x, y, width, height, localArmorData.tooltip, 1.0);
                          PDA_InitButton(armor, true, 1, "", true);
    }

    if (localHasBoots) {
        width = (strLen(localBootsData.name) * 5);

        PDAButton boots = PDA_DisplayArmor(id, strParam("\cdE:\c- %s:", localBootsData.name), localBootsData.graphic, x, y, width, height, localBootsData.tooltip, 1.0);
                          PDA_InitButton(boots, true, 1, "", true);
    }
    // Stashed armors
    for (int armorIndex = 0; armorIndex < DRLA_ARMORMAX; armorIndex++) {
        #define armorToken DRLA_ArmorList[armorIndex][armor_TOKEN]
        armorPickupCheck = strParam("%s:Pickup", armorToken);
        boots            = strCmp(armorToken,strParam("%s:Boots", StrTrim(armorToken,0,5))) == 0;

        if (CheckInventory(armorPickupCheck)) {
            HudMessage(s:"\n"; HUDMSG_PLAIN, PDA_NOEQID, CR_UNTRANSLATED, 0, 0, 0);

            id = (PDA_STASHEDARMORS - 8) + (armorLimit * 2);
            y  = initialY + (height * (armorLimit*2));

            localArmorData.langEntry = strParam("PDA_ARMOR_%s:", DRLA_ArmorList[armorIndex][armor_ACTOR]);
            localArmorData.name      = strParam("%l:", strParam("%l:_NAME", localArmorData.langEntry));
            localArmorData.graphic   = strParam("%l:", strParam("%l:_ICON", localArmorData.langEntry));
            localArmorData.armorAttr = strParam("%l:", strParam("%l:_ATTR", localArmorData.langEntry));
            width     = strLen(localArmorData.name) * 5;

            if (!boots) {
                localArmorData.tooltip = strParam("%l:\n%l:\n%l:",
                        (!isRenegade) ? strParam("%l:_PROT", localArmorData.langEntry) : strParam("%l:_RENPROT", localArmorData.langEntry),
                        strParam("%l:_RES", localArmorData.langEntry), localArmorData.armorAttr);
            } else {
                localArmorData.tooltip = strParam("%l:\n\n%l:",
                        strParam("%l:_PROT", localArmorData.langEntry), localArmorData.armorAttr);
            }
            /*tooltip   = strParam("%l:\n%l:\n%l:\n",
                        (!boots) ? ((!isRenegade) ? strParam("%l:_PROT", langEntry) : strParam("%l:_RENPROT", langEntry)) : "",
                        (!boots) ? strParam("%l:_RES", langEntry) : strParam("%l:_PROT", langEntry), attr);*/

            PDAButton stashed = PDA_DisplayArmor(id, localArmorData.name, localArmorData.graphic, x, y, width, height, localArmorData.tooltip, 1.0);
            PDA_InitButton(stashed, true, 1, "", true);

            if (armorLimit > PDA_MAX_ARMOR_IN_INV + 1) armorLimit = 0;
            else armorLimit++;
        }
    }
    PDA_DefaultFont();
}

// Armor name + backstory
if(PDA_Local.page == EQUIPMENT_PAGE_INFO) {
    PDA_SetScrollLimit(-160);
    PDA_SetScrollArrows2(-160, PDA_SCREEN_WIDTH + 60.0, PDA_SCROLLABLE_HEIGHT + 90.0);

    fixed playerIconY       = 40.0 + Y_TOP_EDGE;

    bool specialArmorTokens = CheckInventory("RLEnclaveSetBonusActive") || CheckInventory("PowerRLPrototypeAssaultShieldProtection") || CheckInventory("PowerRLOverchargeSystemProtection") || CheckInventory("RLCyberneticArmorModdedToken");


    // Armor / Boots / Suit display
    fixed y          = 0.0;
    fixed initialY   = 30.0;
    const int height = 16;
    int width        = 60;

    bool PDA_ManyHax    = false;
    int pdaStrTrimValue = 0;

    const float inAlpha = 0.4;

    DisplayIconParallax("PDAPLYR", PDA_PLYR_ICON, playerIconX, 40.0, 0.0, 1.0);

    localArmorData = setupArmorData(specialArmorTokens);
    localBootsData = setupBootsData();
    localBackpackData = setupBackpackData();

    if (localHasArmor) {
        DisplayIconParallax("PDAPARM", PDA_PLYR_ICON - 1, playerIconX, 40.0, 0.0, showArmor ? 1.0 : 0.5);

        width     = (strLen(localArmorData.name) * 5);

        armorButton = PDA_DisplayArmor(PDA_PLYR_ICON - 5, localArmorData.name, localArmorData.graphic, equippedArmorX, 20.0, width, height, localArmorData.tooltip, inAlpha);
                      PDA_InitButton(armorButton, true, 2, "", true);
    }

    if (localHasBackpack) {
        DisplayIconParallax("PDAPBCK", PDA_PLYR_ICON - 2, playerIconX, 40.0, 0.0, showBackpack ? 1.0 : 0.5);

        width       = (strLen(localBackpackData.name) * 5);

        backpackButton = PDA_DisplayArmor(PDA_PLYR_ICON - 7, localBackpackData.name, localBackpackData.graphic, equippedBackX, 45.0, width, height, localBackpackData.tooltip, inAlpha);
                         PDA_InitButton(backpackButton, true, 2, "", true);
    }

    if (localHasBoots) {
        DisplayIconParallax("PDAPBTS", PDA_PLYR_ICON - 3, playerIconX, 40.0, 0.0, showBoots ? 1.0 : 0.5);

        width   = (strLen(localBootsData.name) * 5);

        bootsButton = PDA_DisplayArmor(PDA_PLYR_ICON - 9, localBootsData.name, localBootsData.graphic, equippedBootsX, 70.0, width, height, localBootsData.tooltip, inAlpha);
                      PDA_InitButton(bootsButton, true, 2, "", true);
    }

    if (isRenegade && (StrCmp(StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,0),StrParam(s:StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,10),s:"Renegade"))) == 0)
        pdaStrTrimValue = 10;
    else
        pdaStrTrimValue = 0;

    //armorDesc =  StrParam("PDA_ARMOR_%s:_DESC", StrTrim(GetArmorInfo(ARMORINFO_CLASSNAME),2,pdaStrTrimValue));

    // Armor
    for (int setIndex = 0; setIndex < DRLA_ARMORSETMAX; setIndex++) {
        if(CheckInventory(DRLA_ArmorSetList[setIndex])) {
            if(CheckInventory("RLEnclaveSetBonusActive") && CheckInventory("RLNuclearWeaponSetBonusActive"))
                PDA_ManyHax = true;

            str trimmedList = strTrim(DRLA_ArmorSetList[setIndex],2,0);

            setName = strParam("%l:\n\n", (PDA_ManyHax)
                ? "PDA_ARMOR_NuclearWeaponSetBonusActive_SETNAME"
                : strParam("PDA_ARMOR_%s:_SETNAME", trimmedList));
            setDesc = strParam("%l:\n\n", (PDA_ManyHax)
                ? "PDA_ARMOR_NuclearWeaponSetBonusActive_SETDESC"
                : strParam("PDA_ARMOR_%s:_SETDESC", trimmedList));
        }
    }

    if(armorButton.state == button_clicked) {
        if (localABoolField != 1) localABoolField = 1;
    }

    if(bootsButton.state == button_clicked) {
        if (localABoolField != 2) localABoolField = 2;
    }

    if(backpackButton.state == button_clicked) {
        if (localABoolField != 4) localABoolField = 4;
    }

    localShowArmor    = (localABoolField & 1);
    localShowBoots    = (localABoolField & 1<<1);
    localShowBackpack = (localABoolField & 1<<2);
    log("aField %d: | showArmor %d: | showBoots %d: | showBackpack %d:", localABoolField, localShowArmor, localShowBoots, localShowBackpack);

    enclaveSetName = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_SETNAME") : "";
    enclaveSetDesc = (PDA_ManyHax) ? strParam("%l:\n\n", "PDA_ARMOR_EnclaveSetBonusActive_SETDESC") : "";

    SetFont(USED_PDA_FONT);

    if (localShowArmor && localHasArmor) {
        HudMessage(
                   "%s:" // Armor section
                   "%s:" // Protection header
                   "%l:" // Protection value
                   "%s:" // Resistances header
                   "%l:" // Resistances value
                   "%s:" // Attributes header
                   "%l:" // Attributes value
                   "%s:" // Description header
                   " %l:" // Description value
                   "%s:" // Set bonus header
                   " %l:" // Bitch hacks for Enclave/Nuclear set
                   " %l:" // Bitch hacks for Enclave/Nuclear set
                   " %l:" // Set name
                   " %l:" // Set desc
                   ,
                    "\cgARMOR\c-\n",
                    "\crProtection:\c-\n",
                    localArmorData.armorVal,

                    "\crResistances:\c-\n",
                    strParam("%l:\n", localArmorData.armorRes),

                    "\crAttributes:\c-\n",
                    strParam("%l:\n\n", localArmorData.armorAttr),

                    "\crDescription:\c-\n",
                    strParam(" %l:\n\n", localArmorData.armorDesc),

                    "\crSet bonus:\c-\n",
                    enclaveSetName,
                    enclaveSetDesc,
                    setName,
                    setDesc;
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    } else if (localShowBoots && localHasBoots) {
        HudMessage(
                   "%s:" // Boots section
                   "%s:" // Boots protection header
                   "%l:" // Boots protection value
                   "%s:" // Boots attributes header
                   "%l:" // Boots attributes value
                   "%s:" // Boots description header
                   "%l:" // Boots description value
                   ,
                    "\cgBOOTS\c-\n",
                    "\crProtection:\c-\n",
                    localBootsData.bootsVal,
                    "\crAttributes:\c-\n",
                    strParam("%l:\n", localBootsData.bootsAttr),
                    "\crDescription:\c-\n",
                    strParam("%l:\n", localBootsData.bootsDesc);
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    } else if (localShowBackpack && localHasBackpack) {
        HudMessage(
                   "%s:" // Backpack
                   "%s:" // Backpack description header
                   "%l:" // Backpack value
                   ,

                    "\cgBACKPACK\c-\n",
                    "\crDescription:\c-\n",
                    localBackpackData.backpackVal;
                    HUDMSG_PLAIN, PDA_INFO3ID, CR_UNTRANSLATED, PDA_SCREEN_X + 10.0 + X_LEFT_EDGE, (int)(PDA_Local.scrollingy * NEW_RESOLUTION_Y) + 140.0 + Y_TOP_EDGE, 0);
    }
}

PDA_DefaultFont();
PDA_UnsetScrollWindow();