// functions
#define PDA_TAB_NEXT_X(a) \
    (PDA_TAB_START_X * (a + 1)) + (2.0 * a)

#define StrTrim(a,b,c)		StrMid((a),(b),StrLen((a)) - (c))
#define Array_Size(array) 	(sizeof((array))/sizeof((array[0][0])))

#define PDA_SetScrollLimit(a)  	PDA_Local.max_text_y = (a)
#define PDA_ResetScroll()       PDA_Local.scrollingY = PDA_SCREEN_Y;
#define PDA_SetMonsterLimit(a)  if (PDA_Local.monsterpage > (a)) PDA_Local.monsterpage = (a)
#define PDA_DefaultFont() 		  SetFont(PDA_FONT[0]);

#define PDA_CheckPlayer1Inventory(name) ACS_NamedExecuteWithResult("PDA_CheckPlayer1Inventory", name)
#define PDA_SetEveryoneInventory(name)  ACS_NamedExecuteWithResult("PDA_SetEveryoneInventory",  name)
#define PDA_GiveEveryoneInventory(name) ACS_NamedExecuteWithResult("PDA_GiveEveryoneInventory", name)

#define pulser(a, b) (b ? b : 0.59) + sin(Timer() * 0.99) / (a)

#define setAssemblyData() \
    master_max = 0; \
    all_assemblies = StrParam(l:"PDA_ASSEMBLIES"); \
    str_split(separator_character, all_assemblies); \
    if (stringArray[0] != "") { \
        while ((stringArray[stringArrayIndex++]) != "") { \
            if (str_find(stringArray[stringArrayIndex], "ADVANCED", TEXT_OFFSET) != -1 && advanced_offset == 0) advanced_offset = stringArrayIndex; \
            if (str_find(stringArray[stringArrayIndex],   "MASTER", TEXT_OFFSET) != -1 && master_offset == 0)   master_offset   = stringArrayIndex; \
            master_max += 1; \
        } \
    } \
    stringArrayIndex = 0; \
    master_max -= 1; \

// shortening array calls
#define localArmorIndex    global_equipment_index[equipment_armor][PlayerNumber()]
#define localBootsIndex    global_equipment_index[equipment_boots][PlayerNumber()]
#define localBackpackIndex global_equipment_index[equipment_backpack][PlayerNumber()]

#define localShowArmor     show_equipment[equipment_armor][PlayerNumber()]
#define localShowBoots     show_equipment[equipment_boots][PlayerNumber()]
#define localShowBackpack  show_equipment[equipment_backpack][PlayerNumber()]

#define localHasArmor      has_equipment[equipment_armor][PlayerNumber()]
#define localHasBoots      has_equipment[equipment_boots][PlayerNumber()]
#define localHasBackpack   has_equipment[equipment_backpack][PlayerNumber()]

#define PDA_Local       PDA_Info[PlayerNumber()]
#define PDA_LocalMouse  PDA_Mouse[PlayerNumber()]
#define PDA_LocalButton PDA_Button[PlayerNumber()]

#define localArmorData    _ad[PlayerNumber()][0]
#define localBackpackData _bpd[PlayerNumber()][0]
#define localBootsData    _bd[PlayerNumber()][0]

#define localModData    PDA_ModData[PlayerNumber()]
#define basic_offset    localModData[mod_data_basic_offset]
#define advanced_offset localModData[mod_data_advanced_offset]
#define master_offset   localModData[mod_data_master_offset]
#define master_max      localModData[mod_data_master_max]

#define localListEnemy PDA_ListEnemy[PlayerNumber()]
// EOF